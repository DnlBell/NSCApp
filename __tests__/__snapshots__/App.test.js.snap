// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
<View
  onLayout={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
    ]
  }
>
  <View
    onMoveShouldSetResponder={[Function]}
    onMoveShouldSetResponderCapture={[Function]}
    onResponderEnd={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderReject={[Function]}
    onResponderRelease={[Function]}
    onResponderStart={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    onStartShouldSetResponderCapture={[Function]}
    style={
      Array [
        Object {
          "flex": 1,
          "flexDirection": "column-reverse",
        },
        Object {
          "backgroundColor": "#000",
        },
      ]
    }
  >
    <View
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <View
        pointerEvents="auto"
        style={
          Object {
            "backgroundColor": "#EFEFF4",
            "bottom": 0,
            "left": 0,
            "opacity": 1,
            "position": "absolute",
            "right": 0,
            "shadowColor": "black",
            "shadowOffset": Object {
              "height": 0,
              "width": 0,
            },
            "shadowOpacity": 0.2,
            "shadowRadius": 5,
            "top": 0,
            "transform": Array [
              Object {
                "translateX": 0,
              },
              Object {
                "translateY": 0,
              },
            ],
          }
        }
      >
        <View
          collapsable={false}
          style={
            Array [
              Object {
                "flex": 1,
                "overflow": "hidden",
              },
              Array [
                Object {
                  "flex": 1,
                },
                undefined,
              ],
            ]
          }
        >
          <View
            onLayout={[Function]}
            style={
              Object {
                "flex": 1,
              }
            }
          >
            <View
              onMoveShouldSetResponder={[Function]}
              onMoveShouldSetResponderCapture={[Function]}
              onResponderEnd={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderReject={[Function]}
              onResponderRelease={[Function]}
              onResponderStart={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              onStartShouldSetResponderCapture={[Function]}
              style={
                Object {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                  "transform": Array [
                    Object {
                      "translateX": 0,
                    },
                  ],
                  "width": 2250,
                }
              }
            >
              <View
                style={
                  Object {
                    "width": 750,
                  }
                }
              />
              <View
                style={
                  Object {
                    "width": 750,
                  }
                }
              />
              <View
                style={
                  Object {
                    "width": 750,
                  }
                }
              />
            </View>
          </View>
          <View
            onLayout={[Function]}
            pointerEvents="box-none"
            style={
              Object {
                "backgroundColor": "#f4f4f4",
                "paddingBottom": 0,
                "paddingLeft": 0,
                "paddingRight": 0,
                "paddingTop": 0,
              }
            }
          >
            <View
              style={
                Object {
                  "backgroundColor": "#f4f4f4",
                  "borderTopColor": "rgba(0, 0, 0, .2)",
                  "borderTopWidth": 0.5,
                  "elevation": 4,
                  "height": 49,
                  "justifyContent": "center",
                  "shadowColor": "black",
                  "shadowOffset": Object {
                    "height": 0.5,
                  },
                  "shadowOpacity": 0.1,
                  "shadowRadius": 0.5,
                  "zIndex": 1,
                }
              }
            >
              <View
                pointerEvents="none"
                style={
                  Object {
                    "bottom": 0,
                    "left": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              />
              <View
                style={
                  Object {
                    "overflow": "scroll",
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "backgroundColor": "#F7F7F7",
          "borderBottomColor": "#A7A7AA",
          "borderBottomWidth": 0.5,
          "height": 64,
          "paddingBottom": 0,
          "paddingLeft": 0,
          "paddingRight": 0,
          "paddingTop": 20,
        }
      }
    >
      <View
        style={
          Object {
            "bottom": 0,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      />
      <View
        style={
          Object {
            "flex": 1,
          }
        }
      >
        <RCTMaskedView
          style={
            Object {
              "bottom": 0,
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
        >
          <View
            pointerEvents="none"
            style={
              Object {
                "bottom": 0,
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          >
            <View
              style={
                Object {
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "center",
                }
              }
            >
              <Image
                source={
                  Object {
                    "testUri": "../../react-navigation/src/views/assets/back-icon-mask.png",
                  }
                }
                style={
                  Object {
                    "alignSelf": "center",
                    "height": 21,
                    "marginLeft": 9,
                    "marginTop": -0.5,
                    "resizeMode": "contain",
                    "width": 12,
                  }
                }
              />
              <View
                style={
                  Object {
                    "backgroundColor": "#d8d8d8",
                    "flex": 1,
                    "marginLeft": -3,
                  }
                }
              />
            </View>
          </View>
          <View
            pointerEvents="box-none"
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "transparent",
                "bottom": 0,
                "flexDirection": "row",
                "justifyContent": "center",
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "transform": Array [
                  Object {
                    "translateX": 0,
                  },
                ],
              }
            }
          >
            <Text
              accessibilityTraits="header"
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              numberOfLines={1}
              style={
                Object {
                  "color": "rgba(0, 0, 0, .9)",
                  "fontSize": 17,
                  "fontWeight": "700",
                  "marginHorizontal": 16,
                  "textAlign": "center",
                }
              }
            >
              MindSpand
            </Text>
          </View>
        </RCTMaskedView>
      </View>
    </View>
  </View>
</View>
`;
